package vartas.discord;

/**
 * This grammar specifies the properties of the commands.
 * For example, it is possible to specify the number of arguments or the permissions that are required to execute it.
 */
grammar Command extends de.monticore.literals.MCCommonLiterals,
                        vartas.discord.Permission,
                        vartas.discord.Parameter,
                        vartas.discord.bot.Rank{
    CommandArtifact =
        ("package" package:StringLiteral)?
        ("prefix" prefix:StringLiteral)?
        "command" "{"
            Command*
        "}"
    ;

    symbol scope Command =
        StringLiteral ("@" (RestrictionName || ",")+ )? "{"
            Attribute*
        "}"
    ;

    /*=========================================================*/
    /*=== Restriction                                       ===*/
    /*=========================================================*/

    /**
     * A restriction imposes a condition on a command.
     * The command will be executed if and only if this condition is satisfied.
     */
    symbol RestrictionName = Restriction;

    enum Restriction =
        GUILD      : "guild"      |
        ATTACHMENT : "attachment"
    ;

    /*=========================================================*/
    /*=== Attribute                                         ===*/
    /*=========================================================*/

    /**
     * An attribute of a command provides are more specific description of the command.
     * Examples of this can be the name of the command and the number of expected parameters.
     */
    interface Attribute;

    symbol ClassAttribute implements Attribute =
        "class" ":" StringLiteral
    ;

    PermissionAttributeAdapter implements Attribute =
        "permission" ":" (PermissionName || ",")+
    ;

    ParameterAttributeAdapter implements Attribute =
        "parameter" ":" (ParameterVariable || ",")+
    ;

    RankAttributeAdapter implements Attribute =
        "rank" ":" (RankName || ",")+
    ;

    /*=========================================================*/
    /*=== AST Rules                                         ===*/
    /*=========================================================*/

    astrule RestrictionName =
        method public String getName(){
            return getRestriction().name();
        }
    ;

    astrule Command =
        method public String getName(){
            return getStringLiteral().getValue();
        }
    ;

    astrule ClassAttribute =
        method public String getName(){
            return getStringLiteral().getValue();
        }
    ;
}
