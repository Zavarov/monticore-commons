package java.math;

import java.math.BigInteger.BigInteger;
import java.math.MathContext.MathContext;
import java.math.RoundingMode.RoundingMode;
import java.lang.String.String;
import java.lang.Object.Object;
import java.lang.Number.Number;
import java.lang.Comparable.Comparable;

/**
 * @version Java 11
 */
public classdiagram BigDecimal{
    public class BigDecimal extends Number implements Comparable <<BigDecimal>>{
        BigDecimal(char[] in);
        BigDecimal(char[] in, int offset, int len);
        BigDecimal(char[] in, int offset, int len, MathContext mc);
        BigDecimal(char[] in, MathContext mc);
        BigDecimal(double val);
        BigDecimal(double val, MathContext mc);
        BigDecimal(int val);
        BigDecimal(int val, MathContext mc);
        BigDecimal(long val);
        BigDecimal(long val, MathContext mc);
        BigDecimal(String val);
        BigDecimal(String val, MathContext mc);
        BigDecimal(BigInteger val);
        BigDecimal(BigInteger unscaledVal, int scale);
        BigDecimal(BigInteger unscaledVal, int scale, MathContext mc);
        BigDecimal(BigInteger val, MathContext mc);

        + BigDecimal abs();
        + BigDecimal abs(MathContext mc);
        + BigDecimal add(BigDecimal augend);
        + BigDecimal add(BigDecimal augend, MathContext mc);
        + byte byteValueExact();
        + int compareTo(BigDecimal val);
        + BigDecimal divide(BigDecimal divisor);
        + BigDecimal divide(BigDecimal divisor, int roundingMode);
        + BigDecimal divide(BigDecimal divisor, int scale, int roundingMode);
        + BigDecimal divide(BigDecimal divisor, int scale, RoundingMode roundingMode);
        + BigDecimal divide(BigDecimal divisor, MathContext mc);
        + BigDecimal divide(BigDecimal divisor, RoundingMode roundingMode);
        + BigDecimal[] divideAndRemainder(BigDecimal divisor);
        + BigDecimal[] divideAndRemainder(BigDecimal divisor, MathContext mc);
        + BigDecimal divideToIntegralValue(BigDecimal divisor);
        + BigDecimal divideToIntegralValue(BigDecimal divisor, MathContext mc);
        + double doubleValue();
        + boolean equals(Object o);
        + float floatValue();
        + int hashCode();
        + int intValue();
        + int intValueExact();
        + long longValue();
        + long longValueExact();
        + BigDecimal max(BigDecimal val);
        + BigDecimal min(BigDecimal val);
        + BigDecimal movePointLeft(int n);
        + BigDecimal movePointRight(int n);
        + BigDecimal multiply(BigDecimal multiplicand);
        + BigDecimal multiply(BigDecimal multiplicand, MathContext mc);
        + BigDecimal negate();
        + BigDecimal negate(MathContext mc);
        + BigDecimal plus();
        + BigDecimal plus(MathContext mc);
        + BigDecimal pow(int n);
        + BigDecimal pow(int n, MathContext mc);
        + int precision();
        + BigDecimal remainder(BigDecimal divisor);
        + BigDecimal remainder(BigDecimal divisor, MathContext mc);
        + BigDecimal round(MathContext mc);
        + int scale();
        + BigDecimal scaleByPowerOfTen(int n);
        + BigDecimal setScale(int newScale);
        + BigDecimal setScale(int newScale, int roundingMode);
        + BigDecimal setScale(int newScale, RoundingMode roundingMode);
        + short shortValueExact();
        + int signum();
        + BigDecimal sqrt(MathContext mc);
        + BigDecimal stripTrailingZeros();
        + BigDecimal subtract(BigDecimal subtrahend);
        + BigDecimal subtract(BigDecimal subtrahend, MathContext mc);
        + BigInteger toBigInteger();
        + BigInteger toBigIntegerExact();
        + String toEngineeringString();
        + String toPlainString();
        + String toString();
        + BigDecimal ulp();
        + BigInteger unscaledValue();
    }
}