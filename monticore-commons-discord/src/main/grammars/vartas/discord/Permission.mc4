package vartas.discord;

/**
 * This grammar defines all permissions supported by Discord.
 * For each symbol, there is also a method that returns the type in JDA.
 */
component grammar Permission{
    symbol PermissionName =
        Permission
    ;

    /*=========================================================*/
    /*=== Enum                                              ===*/
    /*=========================================================*/

    enum Permission =
        CREATE_INSTANT_INVITE       : "create instant invite"           |
        KICK_MEMBERS                : "kick members"                    |
        BAN_MEMBERS                 : "ban members"                     |
        ADMINISTRATOR               : "administrator"                   |
        MANAGE_CHANNEL              : "manage channels"                 |
        MANAGE_SERVER               : "manage server"                   |
        MESSAGE_ADD_REACTION        : "add reactions"                   |
        VIEW_AUDIT_LOGS             : "view audit logs"                 |
        PRIORITY_SPEAKER            : "priority speaker"                |

        VIEW_CHANNEL                : "view channels"                   |

        MESSAGE_READ                : "read messages"                   |
        MESSAGE_WRITE               : "send messages"                   |
        MESSAGE_TTS                 : "text to speech"                  |
        MESSAGE_MANAGE              : "manage messages"                 |
        MESSAGE_EMBED_LINKS         : "embed links"                     |
        MESSAGE_ATTACH_FILES        : "attach files"                    |
        MESSAGE_HISTORY             : "read history"                    |
        MESSAGE_MENTION_EVERYONE    : "mention everyone"                |
        MESSAGE_EXT_EMOJI           : "external emojis"                 |

        VOICE_STREAM                : "voice stream"                    |
        VOICE_CONNECT               : "voice connect"                   |
        VOICE_SPEAK                 : "voice speak"                     |
        VOICE_MUTE_OTHERS           : "voice mute others"               |
        VOICE_DEAF_OTHERS           : "voice deaf others"               |
        VOICE_MOVE_OTHERS           : "voice move others"               |
        VOICE_USE_VAD               : "use voice activity detection"    |

        NICKNAME_CHANGE             : "change nickname"                 |
        NICKNAME_MANAGE             : "manage nicknames"                |

        MANAGE_ROLES                : "manage roles"                    |
        MANAGE_PERMISSIONS          : "manage permissions"              |
        MANAGE_WEBHOOKS             : "manage webhooks"                 |
        MANAGE_EMOTES               : "manage emotes"
    ;

    /*=========================================================*/
    /*=== AST Rules                                         ===*/
    /*=========================================================*/

    astrule PermissionName =
        method public String getName(){
            return getPermission().name();
        }
    ;

    symbolrule PermissionName =
        method public net.dv8tion.jda.api.Permission getPermission(){
            return net.dv8tion.jda.api.Permission.valueOf(getName());
        }
    ;
}