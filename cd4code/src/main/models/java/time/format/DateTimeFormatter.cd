package java.time.format;

/**
 * @version Java 11
 */
public classdiagram DateTimeFormatter{
    public class DateTimeFormatter{
        + String format(TemporalAccessor temporal);
        + void formatTo(TemporalAccessor temporal, Appendable appendable);
        + Chronology getChronology();
        + DecimalStyle getDecimalStyle();
        + Locale getLocale();
        + Set<TemporalField> getResolverFields();
        + ResolverStyle getResolverStyle();
        + ZoneId getZone();
        + DateTimeFormatter localizedBy(Locale locale);
        + TemporalAccessor parse(CharSequence text);
        + TemporalAccessor parse(CharSequence text, ParsePosition position);
//      + <T> T parse(CharSequence text, TemporalQuery<T> query);
//      + TemporalAccessor parseBest(CharSequence text, TemporalQuery<?>... queries);
        + TemporalAccessor parseUnresolved(CharSequence text, ParsePosition position);
        + Format toFormat();
//      + Format toFormat(TemporalQuery<?> parseQuery);
        + String toString();
        + DateTimeFormatter withChronology(Chronology chrono);
        + DateTimeFormatter withDecimalStyle(DecimalStyle decimalStyle);
        + DateTimeFormatter withLocale(Locale locale);
//      + DateTimeFormatter withResolverFields(TemporalField... resolverFields);
        + DateTimeFormatter withResolverFields(Set<TemporalField> resolverFIelds);
        + DateTimeFormatter withResolverStyle(ResolverStyle resolverStyle);
        + DateTimeFormatter withZone(ZoneId zone);
    }
}